// ... [previous imports remain the same until line 76]

  const formatDate = (dateString: string) => {
    const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
    return new Date(dateString).toLocaleDateString('en-US', options);
  };

  // Calculate profit margin with zero check
  const profitMargin = listing.revenue_t12m > 0 
    ? Math.round((listing.profit_t12m / listing.revenue_t12m) * 100)
    : 0;
    
  // Calculate multiple with zero check
  const multiple = listing.profit_t12m > 0 
    ? (listing.asking_price / listing.profit_t12m).toFixed(1)
    : 'N/A';
  
  // Chart data
  const revenueData = [
    { year: '2021', revenue: listing.revenue_t12m * 0.6 },
    { year: '2022', revenue: listing.revenue_t12m * 0.8 },
    { year: '2023', revenue: listing.revenue_t12m },
    { year: '2024', revenue: listing.revenue_t12m * 1.2 }
  ];

  const profitRevenueData = [
    { 
      year: '2021', 
      revenue: listing.revenue_t12m * 0.6,
      profit: (listing.revenue_t12m * 0.6 * profitMargin/100) * 0.9
    },
    { 
      year: '2022', 
      revenue: listing.revenue_t12m * 0.8,
      profit: (listing.revenue_t12m * 0.8 * profitMargin/100) * 0.95
    },
    { 
      year: '2023', 
      revenue: listing.revenue_t12m,
      profit: listing.revenue_t12m * (profitMargin/100)
    },
    { 
      year: '2024', 
      revenue: listing.revenue_t12m * 1.2,
      profit: (listing.revenue_t12m * 1.2 * profitMargin/100) * 1.05
    }
  ];

// ... [rest of the file remains the same]
